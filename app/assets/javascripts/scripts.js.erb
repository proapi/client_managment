function readCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
}

$(function () {
    $(".show-link").click(function () {
        $(this.getAttribute("data-message")).show();
        return false;
    });
    $(".hide-link").click(function () {
        $(this.getAttribute("data-message")).hide();
        return false;
    });
    $(".calculations").change(function () {
        var income_total = $("#clearing_income_total").val();
        income_total = (income_total + "").replace(',', '.');
        var bill_amount = $("#clearing_bill_amount").val();
        bill_amount = (bill_amount + "").replace(',', '.');
        var total_to_client = income_total - bill_amount;
        total_to_client = (total_to_client.toFixed(2) + "").replace('.', ',');
        $("#clearing_total_to_client").val(total_to_client);
    });
    $(".commission").change(function () {
        var commission_manual = $("#clearing_commission_manual").is(':checked');
        if (commission_manual == false) {
            var commission_min = $("#clearing_commission_min").val();
            commission_min = (commission_min + "").replace(',', '.');
            var commission_currency = $("#clearing_commission_currency").val();
            var commission_percent = $("#clearing_commission_percent").val();
            commission_percent = (commission_percent + "").replace(',', '.');
            var rebate_final = $("#clearing_rebate_final").val();
            rebate_final = (rebate_final + "").replace(',', '.');
            var exchange_rate = $("#clearing_exchange_rate").val();
            exchange_rate = (exchange_rate + "").replace(',', '.');

            if (commission_currency == 'PLN') {
                exchange_rate = 1.0;
                $("#clearing_exchange_rate").val('1,0000');
            }

            if ((commission_min) && (commission_currency) && (commission_percent) && (rebate_final) && (exchange_rate)) {
                if ((commission_min >= 0.0) && (commission_percent >= 0.0) && (rebate_final >= 0.0)) {
                    var commission_calc_1 = commission_min * exchange_rate;
                    var commission_calc_2 = commission_percent / 100.00 * exchange_rate * rebate_final;
                    var commission_calc = commission_calc_2;

                    if (commission_calc_1 > commission_calc_2) {
                        commission_calc = commission_calc_1;
                    }
                    commission_calc = (commission_calc.toFixed(2) + "").replace('.', ',');
                    $("#clearing_commission_final").val(commission_calc);
                    if ($("#clearing_bill_attributes_total_manual").is(':checked') == false) {
                        $("#clearing_bill_attributes_total").val(commission_calc);
                    }
                }
            }
        }
    });

    $("#clearing_commission_manual").change(function () {
        var commission_manual = $("#clearing_commission_manual").is(':checked');
        if (!commission_manual) {
            $("#clearing_commission_final").attr('readonly', 'true');
        } else {
            $("#clearing_commission_final").removeAttr('readonly');
        }
    });
    $("#bill_number_manual").change(function () {
        var number_manual = $("#bill_number_manual").is(':checked');
        if (!number_manual) {
            $("#bill_number").attr('readonly', 'true');
        } else {
            $("#bill_number").removeAttr('readonly');
        }
    });
    $("#bill_total_manual").change(function () {
        var total_manual = $("#bill_total_manual").is(':checked');
        if (!total_manual) {
            $("#bill_total").attr('readonly', 'true');
        } else {
            $("#bill_total").removeAttr('readonly');
        }
    });
    $("#clearing_bill_attributes_number_manual").change(function () {
        var number_manual = $("#clearing_bill_attributes_number_manual").is(':checked');
        if (!number_manual) {
            $("#clearing_bill_attributes_number").attr('readonly', 'true');
        } else {
            $("#clearing_bill_attributes_number").removeAttr('readonly');
        }
    });
    $("#clearing_bill_attributes_total_manual").change(function () {
        var total_manual = $("#clearing_bill_attributes_total_manual").is(':checked');
        if (!total_manual) {
            $("#clearing_bill_attributes_total").attr('readonly', 'true');
        } else {
            $("#clearing_bill_attributes_total").removeAttr('readonly');
        }
    });
    $("#bill_company_id").change(function () {
        var company = $(this).val();
        if (company) {
            var number = readCookie(company);
            if (number != null) {
                $("#bill_number").val((number + "").replace('%2F', '/'));
            }
        }
    });

    $("#bill_clearing_id").change(function () {
        var clearing = $(this).val();
        var rebate_final = null;
        if (clearing) {
            var data_message = this.getAttribute('data-message').split(";");
            for (i = 0; i < data_message.length; i++) {
                if (data_message[i].split('=')[0] == clearing) {
                    rebate_final = data_message[i].split('=')[1];
                }
            }
        }

        if (rebate_final != null) {
            $("#bill_total").val((rebate_final + "").replace('.', ','));
        } else {
            $("#bill_total").val('');
        }
    });
    $("#clearing_to_client_date").change(function () {
        var clearing_to_client_date = $(this).val();
        $("#clearing_payment_date").val(clearing_to_client_date);
    });

    $(".bank-radio").change(function () {
        $("#bank_account_number").show();
        $("#bank_account_data").show();
    });
    $(".datepicker").each(function (i, obj) {
        if ($.datepicker.parseDate('yy-mm-dd', $(this).val())) {
            $(this).val($.datepicker.formatDate('dd-mm-yy', new Date($(this).val())));
        }
    });
    var original_gotoToday = $.datepicker._gotoToday;

    $.datepicker._gotoToday = function (id) {
        var target = $(id),
                inst = this._getInst(target[0]);

        original_gotoToday.call(this, id);
        this._selectDate(id, this._formatDate(inst, inst.selectedDay, inst.drawMonth, inst.drawYear));
    }
});