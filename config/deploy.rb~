# RVM bootstrap
require 'rvm/capistrano'
set :rvm_ruby_string, '1.9.3@europodatki'
set :rvm_type, :system

# bundler bootstrap
#set :bundle_flags, "--deployment --quiet"
#set :bundle_flags, "--deployment --quiet"
#require 'bundler/capistrano'

load 'deploy/assets'

set :application, "europodatki2"
set :repository, "git@megiforge.pl:r/europodatki.git"

set :scm, :git
# Or: `accurev`, `bzr`, `cvs`, `darcs`, `git`, `mercurial`, `perforce`, `subversion` or `none`

set :user, "pawelski"
set :scm_username, "pawelski"
set :scm_passphrase, "TrustNo1"
set :branch, "master"
set :scm_verbose, true
set :deploy_to, "/www/#{application}"
set :use_sudo, false
set :deploy_via, :remote_cache

default_run_options[:pty] = true
ssh_options[:forward_agent] = true

role :web, "proapi.eu" # Your HTTP server, Apache/etc
role :app, "proapi.eu" # This may be the same as your `Web` server
role :db, "proapi.eu", :primary => true # This is where Rails migrations will run
role :db, "proapi.eu"

# if you want to clean up old releases on each deploy uncomment this:
# after "deploy:restart", "deploy:cleanup"

# if you're still using the script/reaper helper you will need
# these http://github.com/rails/irs_process_scripts

# If you are using Passenger mod_rails uncomment this:
#before "deploy", "deploy:create_gemset"
after "deploy:finalize_update", "deploy:bundle"

namespace :deploy do
  task :start do
    ;
  end
  task :stop do
    ;
  end

  desc "Restart the application Europodatki"
  task :restart, :roles => :app, :except => {:no_release => true} do
    #run "#{try_sudo} touch #{File.join(current_path, 'tmp', 'restart.txt')}"
    run "touch #{File.join(current_path, 'tmp', 'restart.txt')}"
  end

  #desc "Create the gemset"
  #task :create_gemset do
  #  run "rvm #{rvm_ruby_string} --create"
  #end

  desc "Install the bundle"
  task :bundle do
    run "cd #{release_path} && bundle install --without development test"
  end
end