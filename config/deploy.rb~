# RVM bootstrap
require 'rvm/capistrano'
set :rvm_ruby_string, '1.9.3'
set :rvm_type, :system

# bundler bootstrap
#set :bundle_flags, "--deployment --quiet"
require 'bundler/capistrano'

load 'deploy/assets'

set :application, "europodatki"
set :repository, "git@megiforge.pl:r/europodatki.git"

set :scm, :git
# Or: `accurev`, `bzr`, `cvs`, `darcs`, `git`, `mercurial`, `perforce`, `subversion` or `none`

set :user, "pawelski"
set :group, "pawelski"
set :scm_username, "pawelski"
#set :scm_passphrase, "password"
set :env, "production"
set :branch, "master"
set :scm_verbose, true
#set :deploy_to, "/var/www/#{application}"
set :deploy_to, "/usr/share/nginx/www/#{application}"
set :use_sudo, false
set :deploy_via, :remote_cache
set :deploy_env, 'production'

default_run_options[:pty] = true
ssh_options[:forward_agent] = true

role :web, "proapi.eu" # Your HTTP server, Apache/etc
role :app, "proapi.eu" # This may be the same as your `Web` server
role :db, "proapi.eu", :primary => true # This is where Rails migrations will run
role :db, "proapi.eu"

# if you want to clean up old releases on each deploy uncomment this:
after "deploy:restart", "deploy:cleanup"

# if you're still using the script/reaper helper you will need
# these http://github.com/rails/irs_process_scripts

namespace :deploy do
#[:start, :stop, :restart].each do |t|
#   desc "#{t} server"
#   task t, :roles => :app do
#     sudo "/etc/init.d/nginx #{t}"
#     sudo "/etc/init.d/thin #{t}"
#   end
# end

#for Passenger, restarts the process
  desc "Restart the application Europodatki"
  task :restart, :roles => :app, :except => {:no_release => true} do
    run "touch #{File.join(current_path, 'tmp', 'restart.txt')}"
  end

  desc "Relink production.sqlite3 from outer directory"
  task :resymlink, :roles => :app do
    #run "rm -rf #{current_path}/db/production.sqlite3 && ln -s /var/db/#{application}/production.sqlite3 #{current_path}/db/production.sqlite3"
    run "rm -rf #{current_path}/db/production.sqlite3 && ln -s /usr/share/nginx/www/#{application}/production.sqlite3 #{current_path}/db/production.sqlite3"
  end

  desc "Migrate the production database in outer directory"
  task :migration, :roles => :app do
    run "cd #{current_path} && bundle exec rake RAILS_ENV=production db:migrate"
  end

  desc "Expires all cache in database"
  task :cache_expire, :roles => :app do
    run "cd #{current_path} && bundle exec rake RAILS_ENV=production cache:expire"
  end

  desc "Fix bills"
  task :fix_bills, :roles => :app do
    run "cd #{current_path} && bundle exec rake RAILS_ENV=production bills:change_number"
  end
end

after "deploy:create_symlink", "deploy:resymlink"
after "deploy:resymlink", "deploy:migration"
after "deploy:restart", "deploy:cache_expire"
after "deploy:cache_expire", "deploy:fix_bills"
#after 'deploy:update', 'deploy:resymlink'

